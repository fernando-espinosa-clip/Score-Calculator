name: Get JWT Token

on:
  workflow_call:
    secrets:
      IAM_EMAIL:
        required: true
      IAM_PASSWORD:
        required: true
    outputs:
      jwt_token:
        description: "The JWT token obtained from the API"
        value: ${{ jobs.get_token.outputs.jwt_token }}

jobs:
  get_token:
    runs-on: ubuntu-latest
    name: Obtain JWT Token
    outputs:
      jwt_token: ${{ steps.jwt.outputs.jwt_token }}

    steps:
      - name: Check if secrets are set
        run: |
          if [ -z "${{ secrets.IAM_EMAIL }}" ] || [ -z "${{ secrets.IAM_PASSWORD }}" ]; then
            echo "::error::IAM_EMAIL or IAM_PASSWORD secrets are not configured"
            exit 1
          fi

      - name: Obtain JWT Token
        id: jwt
        run: |
          # Get JWT token from API
          RESPONSE=$(curl --location 'https://dev-api.clip.mx/iam/user/login' \
            --header 'Accept: application/vnd.com.payclip.v1+json' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "email": "'"$IAM_EMAIL"'",
                "password": "'"$IAM_PASSWORD"'",
                "source": "M_DASHBOARD",
                "type": "LOGIN",
                "expiration_time":"PT72H"
            }')

          # Extract token from response
          JWT_TOKEN=$(echo "$RESPONSE" | jq -r '.access_token')

          # Check if token was obtained successfully
          if [ -z "$JWT_TOKEN" ] || [ "$JWT_TOKEN" == "null" ]; then
            echo "Failed to obtain JWT token"
            echo "$RESPONSE"
            exit 1
          fi

          # Set output for other workflows to use
          echo "jwt_token=$JWT_TOKEN" >> $GITHUB_OUTPUT
          echo "Successfully obtained JWT token"
        env:
          IAM_EMAIL: ${{ secrets.IAM_EMAIL }}
          IAM_PASSWORD: ${{ secrets.IAM_PASSWORD }}
